스택: 후입선출
    []와 .append(), .pop()으로 구현 가능

큐: 선입선출
    from collections import deque
    queue = deque()로 구현, append()와 popleft() 사용

재귀함수: 자기 자신을 다시 호출하는 함수

그래프: 노드(Node)와 간선(Edge)으로 이루어져 노드를 정점(Vertex)이라고도 함

인접 행렬(Adjacency Matrix): 2차원 배열로 그래프의 연결 관계를 표현하는 방식
인접 리스트(Adjacency List): 리스트로 그래프의 연결 관계를 표현하는 방식

DFS: 깊이 우선 탐색, 그래프의 깊은 부분을 우선으로 탐색하는 알고리즘
    스택 자료구조 이용, 다음과 같은 동작과정
        1) 탐색 시작 노드를 스택에 삽입하고 방문처리
        2) 스택의 최상단 노드에 방문하지 않은 인접 노드가 있으면 그 인접노드를 스택에 넣고 방문 처리, 방문 하지 않은 인접노드가 없으면 스택에서 최상단 노드를 꺼냄
        3) 2번의 과정을 더 이상 수행 할 수 없을 때까지 반복
    구현이 간단, 데이터 개수 N개일 때 O(N)의 시간 소요
    재귀 함수로 구현시 매우 간단

BFS: 너비 우선 탐색, 가까운 노드부터 탐색하는 알고리즘
    큐 자료구조 이용, 동작 과정
        1) 탐색 시작노드를 큐에 삽입하고 방문처리
        2) 큐에서 노드를 꺼내 해당 노드의 인접 노드 중 방문하지 않는 노드를 모두 큐에 삽입하고 방문 처리
        3) 2번의 과정을 더이상 수행할 수 없을 때까지 반복
    큐 자료구조에 기초해 구현이 간단, O(N)의 시간 소요, 실제 수행시간은 DFS보다 좋은 편
    deque 라이브러리 사용시 간단


